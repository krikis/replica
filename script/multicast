#!/usr/bin/env ruby
require 'em-websocket'
require 'json'
require 'andand'

EventMachine.run {

  @channel = EM::Channel.new
  
  @index = {}
  
  EventMachine::WebSocket.start(:host => "0.0.0.0", :port => 8080, :secure => false) do |ws|
    
    ws.onopen {
      puts "+"
      @channel.subscribe do |msg| 
        puts msg.inspect
        unless msg[:signature] == ws.signature or (msg["dest"] and msg["dest"] != @index[ws.signature])
          ws.send JSON.dump(msg.reject{|k, v| k == :signature})
        end
      end
      ws.send JSON.dump({:index => @index.values})
    }  

    ws.onmessage {|msg|
      object = (JSON.parse msg rescue nil)
      if object and object["key"]
        if signature = @index.keys.select{|key| @index[key] == object["key"]}.first
          @index[ws.signature] = @index[signature]
          @index.delete signature
        end
        @channel.push object.merge({:signature => ws.signature}) unless @index[ws.signature] == object["key"]
        @index[ws.signature] = object["key"]
      end
    }
    
  end

  puts "Server started"
}