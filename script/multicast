#!/usr/bin/env ruby
require 'em-websocket'
require 'json'
require 'andand'

EventMachine.run {

  @channel = EM::Channel.new

  @index = {}

  EventMachine::WebSocket.start(:host => "0.0.0.0", :port => 8080, :secure => false) do |ws|

    ws.onopen {
      sid = @channel.subscribe do |msg|
        unless msg["dest"] and msg["dest"] != @index[ws.signature]
          puts msg.inspect
          ws.send JSON.dump(msg.reject{|k, v| k == :signature})
        end
      end
      puts "+#{sid}"
      ws.send JSON.dump({:index => @index.values})

      ws.onclose {
        @channel.unsubscribe sid
        puts "-#{sid}"
        @channel.push({"id" => @index.delete(ws.signature),
                       "unsubscribe" => true,
                       :signature => ws.signature})
      }
    }

    ws.onmessage {|msg|
      object = (JSON.parse msg rescue nil)
      if object and object["id"]
        if signature = @index.keys.select{|signature| @index[signature] == object["id"]}.first and
           signature != ws.signature
          @index[ws.signature] = @index[signature]
          @index.delete signature
        end
        @channel.push object.merge({:signature => ws.signature})
        @index[ws.signature] = object["id"]
      end
    }

  end

  puts "Server started"
}